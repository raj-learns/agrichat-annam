"use strict";(self.webpackChunknotes=self.webpackChunknotes||[]).push([[9545],{881:(n,e,i)=>{i.r(e),i.d(e,{assets:()=>a,contentTitle:()=>c,default:()=>h,frontMatter:()=>o,metadata:()=>s,toc:()=>l});const s=JSON.parse('{"id":"contributing/Naming-convention","title":"Naming Convention Guide","description":"Consistent and descriptive branch naming helps keep the AgriChat-Annam repository organized, collaborative, and easy to maintain. Follow these guidelines when creating new branches.","source":"@site/docs/contributing/Naming-convention.md","sourceDirName":"contributing","slug":"/contributing/Naming-convention","permalink":"/agrichat-annam/docs/contributing/Naming-convention","draft":false,"unlisted":false,"editUrl":"https://github.com/continuousactivelearning/agrichat-annam/docs/contributing/Naming-convention.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"Contribution-guide","permalink":"/agrichat-annam/docs/contributing/Contribution-guide"}}');var t=i(4848),r=i(8453);const o={},c="Naming Convention Guide",a={},l=[{value:"General Rules",id:"general-rules",level:2},{value:"Best Practices",id:"best-practices",level:2}];function d(n){const e={br:"br",code:"code",h1:"h1",h2:"h2",header:"header",hr:"hr",li:"li",p:"p",strong:"strong",ul:"ul",...(0,r.R)(),...n.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(e.header,{children:(0,t.jsx)(e.h1,{id:"naming-convention-guide",children:"Naming Convention Guide"})}),"\n",(0,t.jsx)(e.p,{children:"Consistent and descriptive branch naming helps keep the AgriChat-Annam repository organized, collaborative, and easy to maintain. Follow these guidelines when creating new branches."}),"\n",(0,t.jsx)(e.hr,{}),"\n",(0,t.jsx)(e.h2,{id:"general-rules",children:"General Rules"}),"\n",(0,t.jsxs)(e.ul,{children:["\n",(0,t.jsx)(e.li,{children:"Use lowercase letters only."}),"\n",(0,t.jsxs)(e.li,{children:["Separate words with hyphens (",(0,t.jsx)(e.code,{children:"-"}),"), not underscores or spaces."]}),"\n",(0,t.jsx)(e.li,{children:"Start with a prefix that describes the file's purpose."}),"\n",(0,t.jsx)(e.li,{children:"Keep names concise and descriptive."}),"\n",(0,t.jsx)(e.li,{children:"Add markdown description for functionality used in the class or function."}),"\n"]}),"\n",(0,t.jsx)(e.h2,{id:"best-practices",children:"Best Practices"}),"\n",(0,t.jsxs)(e.ul,{children:["\n",(0,t.jsxs)(e.li,{children:["\n",(0,t.jsxs)(e.p,{children:[(0,t.jsx)(e.strong,{children:"Be Descriptive:"}),(0,t.jsx)(e.br,{}),"\n","Make the purpose of the branch clear from its name."]}),"\n"]}),"\n",(0,t.jsxs)(e.li,{children:["\n",(0,t.jsxs)(e.p,{children:[(0,t.jsx)(e.strong,{children:"Keep It Short:"}),(0,t.jsx)(e.br,{}),"\n","Use only as many words as needed to describe the change."]}),"\n"]}),"\n",(0,t.jsxs)(e.li,{children:["\n",(0,t.jsxs)(e.p,{children:[(0,t.jsx)(e.strong,{children:"Use Issue Numbers:"}),(0,t.jsx)(e.br,{}),"\n","If the branch addresses a specific issue or ticket, include its number for easy tracking."]}),"\n"]}),"\n",(0,t.jsxs)(e.li,{children:["\n",(0,t.jsxs)(e.p,{children:[(0,t.jsx)(e.strong,{children:"Avoid Generic Names:"}),(0,t.jsx)(e.br,{}),"\n","Do not use branch names like ",(0,t.jsx)(e.code,{children:"update"}),", ",(0,t.jsx)(e.code,{children:"changes"}),", or ",(0,t.jsx)(e.code,{children:"fix"}),"."]}),"\n"]}),"\n",(0,t.jsxs)(e.li,{children:["\n",(0,t.jsxs)(e.p,{children:[(0,t.jsx)(e.strong,{children:"Stay Consistent:"}),(0,t.jsx)(e.br,{}),"\n","Ensure everyone on the team follows these conventions."]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(e.hr,{})]})}function h(n={}){const{wrapper:e}={...(0,r.R)(),...n.components};return e?(0,t.jsx)(e,{...n,children:(0,t.jsx)(d,{...n})}):d(n)}},8453:(n,e,i)=>{i.d(e,{R:()=>o,x:()=>c});var s=i(6540);const t={},r=s.createContext(t);function o(n){const e=s.useContext(r);return s.useMemo((function(){return"function"==typeof n?n(e):{...e,...n}}),[e,n])}function c(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(t):n.components||t:o(n.components),s.createElement(r.Provider,{value:e},n.children)}}}]);